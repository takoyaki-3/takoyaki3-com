name: OpenHands PR Bot

on:
  workflow_dispatch:
    inputs:
      goal:
        description: "What should OpenHands do? (will propose a PR)"
        required: true
        type: string
      max_minutes:
        description: "Max runtime in minutes"
        required: false
        default: "15"
        type: string
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  run-agent:
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (
        github.event_name == 'issue_comment' &&
        startsWith(github.event.comment.body, '/openhands pr') &&
        (
          github.event.comment.author_association == 'MEMBER' ||
          github.event.comment.author_association == 'OWNER' ||
          github.event.comment.author_association == 'COLLABORATOR'
        )
      )
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Prepare goal input
        id: prep
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            GOAL="${{ github.event.inputs.goal }}"
            MAX_MIN="${{ github.event.inputs.max_minutes }}"
          else
            # Strip the command prefix `/openhands pr` and trim spaces robustly
            RAW="${{ github.event.comment.body }}"
            GOAL="$(
              printf '%s' "$RAW" \
                | sed -E 's#^/openhands[[:space:]]+pr[[:space:]]*##' \
                | sed -E 's/^[[:space:]]+//' \
                | sed -E 's/[[:space:]]+$//'
            )"
            MAX_MIN="15"
          fi

          if [ -z "$GOAL" ]; then
            echo "Goal is empty. Provide a goal or use '/openhands pr <goal>'" >&2
            exit 1
          fi

          echo "goal=$GOAL" >> "$GITHUB_OUTPUT"
          echo "maxmin=$MAX_MIN" >> "$GITHUB_OUTPUT"

      # - name: Show goal
      #   run: echo "OpenHands goal => ${{ steps.prep.outputs.goal }} (max ${{ steps.prep.outputs.maxmin }} min)"

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Pull OpenHands image
        run: docker pull ghcr.io/all-hands-ai/openhands:latest

      - name: Run OpenHands (Gemini)
        env:
          GOOGLE_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOAL: ${{ steps.prep.outputs.goal }}
          MAX_MIN: ${{ steps.prep.outputs.maxmin }}
        shell: bash
        run: |
          if [ -z "$GOOGLE_API_KEY" ]; then
            echo "Missing secret GEMINI_API_KEY" >&2
            exit 1
          fi
          # Run OpenHands container mounting the repo; flags may vary across versions.
          docker run --rm \
            -v "$PWD":/workspace \
            -e GOOGLE_API_KEY \
            -e GITHUB_TOKEN \
            ghcr.io/all-hands-ai/openhands:latest \
              --workspace /workspace \
              --llm-provider gemini \
              --model gemini-2.5-pro \
              --non-interactive \
              --max-minutes "$MAX_MIN" \
              --goal "$GOAL" || true

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          title: "OpenHands: ${{ steps.prep.outputs.goal }}"
          commit-message: "OpenHands changes: ${{ steps.prep.outputs.goal }}"
          branch: "openhands/${{ github.run_id }}"
          delete-branch: true
          body: |
            Automated PR generated by OpenHands.

            Goal:
            ${{ steps.prep.outputs.goal }}

      - name: React on PR creation
        if: github.event_name == 'issue_comment' && steps.cpr.outputs.pull-request-number
        uses: actions/github-script@v7
        env:
          GOAL: ${{ steps.prep.outputs.goal }}
        with:
          script: |
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: `Opened PR #${{ steps.cpr.outputs['pull-request-number'] }} for goal: ${process.env.GOAL || ''}`
            })
